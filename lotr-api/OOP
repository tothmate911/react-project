OOP / General
What is OOP?
Inheritance. Explain the concept with realistic example.
Polymorphism. Explain the concept with realistic example.
Abstraction. Explain the concept with realistic example.
Encapsulation. Explain the concept with realistic example.
What is a class?
What is an Object?
What is casting? What is the difference between up vs downcasting?
Define a constructor?
What is method overloading?
What are different types of arguments? (context: pass by value / pass by reference)
What is method overriding?
What is an interface?
What is exception handling?
Difference between overloading and overriding?
What are access modifiers?
Do we require parameter for constructors?
Whether static method can use non static members?
What are base class, subclass and superclass?
What is data hiding?
What is variable shadowing?
What is the difference between hiding a static method and overriding an instance method?
Define the following terms: Instantiation, Attribute, Method
Explain how object oriented languages attempt to simplify memory management for Programmers.
Explain the “Single Responsibility” principle!
What is an object oriented program? Explain, show.
Draw an object oriented family (as entities, with relations) on the whiteboard.
What does it mean that an object is Immutable?
How do you make a class immutable? What do you need to watch out for?
How do you prevent developers from subclassing a class?
How do you prevent developers from overriding a method in a subclass?
How do you prevent developers from changing the value of a variable?
What are the possible uses of reflection?
Java Language
What is the JVM?
What is the difference between the JRE and the JDK?
What is the difference between long and Long?
Can a long store longer number than Long?
What is autoboxing and unboxing?
If you have a variable, that shall store a positive whole number between 0 and 200, what primitive type would you use to store it?
Think about money ;) How would you store a currency value, that shall support decimal parts? Think it through again, and try to think outside of the box!
What do you think, why there is no string type in Java?
What is the largest number you can work with in Java?
What happens if you try to call something, that you have no access to, because of data hiding?
What happens if you try to delete/drop an item from an array, while you are iterating over it?
What happens if you try to delete/drop/add an item from a List, while you are iterating over it?
What happens if you try to add an item to the end of an array, while you are iterating over it?
How can you safely add/remove items to/from a List?
What is the "golden rule" of variable scoping in Java? What is the lifetime of variables?
What is garbage collector, in a nutshell?
If you need to access the iterator variable after a for loop, how would you do it?
What kind of packages do you know under java.util.* ? Bring at least 3 examples.
Given two Java programs on two different machines. How can you communicate between the two? What are the possible ways?
When you use method overriding, can you throw fewer exceptions in the subclass than in the parent class? Why?
When you use method overriding, can you throw more exceptions in the subclass than in the parent class? Why?
When you use method overriding, can you change the access level of the method, from protected to public? Why?
When you use method overriding, can you change the access level of the method, from public to protected? Why?
Which interfaces extend the Collection interface in Java. Which classes?
Does Map extends the Collection interface? Why?

No it does not, it was a design choice by the developers of Java. They thought that mappings are not collections and collections are not mappings, so why should map extend the collection interface.

If we think about maps as collections, we should point out what an element is. The only plausible answer seems to be key-value pairs, but in the end this provides a very limited and not too useful map abstraction. “You can't ask what value a given key maps to, nor can you delete the entry for a given key without knowing what value it maps to.”

source
What is JPA? What is JDBC? Which are the advantages and disadvantages of each? When to use each?
How does HashMap work?
What is the connection between equals() and hashCode()? How are they used in HashMap?
Why is it important for keys in a map to have an immutable type? (Consider String for example.)
What is the purpose of the ‘equals()’ method?
What is the difference between '==' and 'equals()'?
What is the difference between checked exceptions and unchecked exceptions? Could you bring example for each?
What is Error in Java and how does it relate to Exception?
What does 'fail fast' mean in terms of exception handling? Why is it a good practice?
When does 'finally' block run? What it is used for? Could you give an example from your projects when you would use 'finally'?
Which order should we catch the exceptions? Why?
In which case should we catch an exception? Why?
How can we handle exception? What can we and should we do with an exception in the 'catch' block?
What are the access modifiers in Java? Which one could we use for class?
What does ‘static’ keyword mean?
Could we access static variable (or method) from a non-static method? Why?
Could we access non-static variable (or method) from a static method? Why?
Can an “enum” contain methods in Java? Explain.
What are “checked” and “unchecked” exceptions?
What are “generics” in Java? When to use? Show examples.
What is the benefit of having “generic” containers in Java?
How many instances you have of a static variable of a given class in the JVM?
Why main() method is declared as static? Explain.
Why is it not a good practice to write a lot of static methods?
Can the main method be overridden? Explain your answer!
When would you use a private/protected/public attribute? What is the difference?
What are the features of static attributes and static methods of a class? What are the benefits, when to use them?
What is annotation? What can be annotated and how? Show examples.
What is a ternary operator?
How many instances can be created for an abstract class?
What is ‘this’ reference?
What does final means in case of variable, method and class?
What is super keyword?
What is the default access modifier in a class?
Consider the following class definition and implement the solutions:
Java Enterprise
What is Java Enterprise (J2EE, JEE)? What is the major difference between the Standard edition (JSE) and Enterprise edition (JEE)?
What is Hibernate? What are the advantages, limitations?
Difference between .jar and .war files
What is Spring?
What is Spring Boot?
What are the advantages of the Spring Framework?
What are the major differences between Maven, Ant and Gradle?
What is Maven used for?
What does a pom.xml file contain in Maven?
What is n-tier (or multi-tier) architecture?
What are microservices? Advantages and disadvantages?
What is continuous integration? Why is CI important?
Why are tests important in the CI workflow?
Name some software that help the CI workflow!
What is Continuous Delivery?
What is Continuous deployment?
What is DevOps?
Algorithms, Pseudo code
Fibonacci sequences. Write a method(or pseudo code), that generates the Fibonacci sequences.
Factorial. Write a function that, given a number as input, returns the factorial of that number. The factorial of a number ‘n’ is the product of all positive integers less than or equal to ‘n’. So, the factorial of 6 would be 6*5*4*3*2*1 = 720. The factorial of 0 is 1.
Write a function that calculates the factorial of an integer with recursion.
Write a function, that prints all the files in a given folder and sub-folders using recursion.
What is “Stack overflow”? Write a code, that ends up with stack overflow.
What is Big O complexity? Explain time and space complexity!
What is the Big O time complexity of the common operations in an ArrayList, LinkedList, HashMap? And of a bubble sort, quicksort, finding items in a Binary Search tree?
What is binary search tree (BST)? Write an implementation in Java.
What is linked list? How to find if linked list has a loop?
How to find middle element of linked list in one pass?
In an integer array, there is 1 to 100 number, out of one is duplicate, how to find?
What is the difference between Stack and Queue data structure?
What is QuickSort? Describe the main logic of this sorting algorithm.
What is a graph? What are simple graphs? What are directed graphs? What are weighted graphs?
What are trees? What are binary trees? What are binary search trees?
How can you store graphs in programs? What are the advantages/disadvantages per each?
What are graph traversal algorithms? What is BFS, how does it work? What is DFS, how does it work?
Testing
What are unit test, integration test, system test, regression test, acceptance test? What is the major difference between these?
What is code coverage? Why is it used? How you can measure?
What does mocking mean? How would you do it 'manually' (i. e. without using any fancy framework)?
What is a test case? What is an assertion? Give examples!
What is TDD? What are the benefits?
What are the unit testing best practices? (Eg. how many assertion should a test case contain?)
Databases
How can you connect your application to a database server? What are the possible ways?
When do you use the DISTINCT keyword in SQL?
What are aggregate functions in SQL? Give 3 examples.
What do you know about database normalization?
What kind of JOIN types do you know in SQL? Could you give examples?
What are database transactions? When to use?
What is a two-phase commit? Bring an example how to use?
What kind of database relations do you know? How to define them?
What is an ORM? What are the benefits, when to use?
What is the difference between JDBC and JPA?
What is the DAO pattern? When and how to implement?
How would you keep track of what kind of data has changed after an UPDATE or DELETE operation in a table?
You have a table with an “address” field which contains data like 3525, Miskolc, Régiposta 9. (postcode, city, street name and address). How would you query all records related Miskolc?
Networking, HTTP, Web technologies
What is the difference between HTML and XML?
What is XSLT?
When to use AJAX? Bring examples.
What is SOA? When to use?
What kind of HTTP status codes do you know?
What is a REST API?
What is JSON? When to use?
What is TCP/IP? What layers does it define, what are they responsible for?
What’s the difference between TCP and UDP?
How does an HTTP Request look like? What are the most relevant HTTP header fields?
How does an HTTP Response look like? What are the most relevant HTTP header fields?
What is DNS? How does it work?
Software Methodologies
What kind of software-lifecycle models do you know?
What kind of software development methodologies do you know? What are the main features of these?
What is a UML diagram? What kind of diagram types do you know?
What is a UML class diagram? What are the typical elements?
What kind of design patterns do you know? Bring at least 3 examples.
What is the purpose of the Iterator Pattern?
What do you know about the SOLID principles?
How would you separate data storage code and business logic code (which uses stored data) in an application?
What are the SCRUM roles? What are the SCRUM ceremonies? What are the SCRUM artifacts?
What is the main goal of a retrospective meeting?
Threads, Concurrency
When do you need to use threads in an application?
What is a daemon thread?
What is the difference between synchronous and asynchronous execution?
What is the difference between concurrent and parallel execution of code?
What is the most important problem developers are faced when using threads?
In what kind of situations can deadlocks occur?
What are possible ways to prevent deadlocks from occurring?
What does critical section or critical region mean in the context of concurrent programming?
How do you execute critical code in [your favourite language]? What mechanism(s) can you use?
